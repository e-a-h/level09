TERRAIN EDITING TUTORIAL!!!!

Software needed:
- HxD (or other hex editor)
- ImageMagick - this can be installed standalone depending on your OS. I have Cygwin on Windows and installed imagemagick from the cygwin setup. very handy if you do a lot of command-line stuff and prefer linux-like environment to windows CMD.
- Image editing software e.g. photoshop, gimp
OPTIONAL BONUS software:
- VolView - good for exploring unknown formats, but I have the TerrainData.bin format perfectly mapped, so this is good to know about, but not needed.
- Autodesk Maya or other 3D software. Student or teacher credentials will get you a free educational license of any Autodesk software.
- Autodesk Mudbox or ZBrush for sculpting new sand height maps

#######################################
#
# Manual extract (see below for auto)
#
# Open TerrainData.bin in hex editor.
# Copy from offset 0x00 (beginning of file) to length 0x40000 (last offset in the selection should be 0x3FFFF) into a new file and name it HeightMap.raw
# Copy 0x40000-0x7FFFF (again, selection length should be 0x40000) into a new file and name it BlockMap.raw
# copy 0x80000-0xFFFFF (selection length 0x80000) into a new file and name it DustMap.raw
#
#######################################



#######################################
# Image conversion
#######################################

#######################################
# Under-sand/dust color map conversion:
convert -depth 8 -size 256x512 -define tiff:alpha=unspecified RGBA:DustMap.raw -type TrueColorMatte tif:DustMap.tif

# Edit the image
# Pay attention to the alpha channel as well if you want to control dust in
# shadow. Alpha in this case is not transparency, it's shadow.

# Convert back to raw pixel stream:
stream -map rgba -storage-type char DustMap.tif DustMap_Modified.raw


#######################################
# Mystery bitmap conversion:
convert -depth 8 -size 256x512 gray:BlockMapA.raw BlockMapA.tif
convert -depth 8 -size 256x512 gray:BlockMapB.raw BlockMapB.tif

# Edit the image.
# It appears to use black and white values only, no grays, although some
# apparently unused maps have anti-aliasing in them, and I'm not sure if that's
# significant.

# Convert back to raw pixel stream:
stream -map i -depth 8 BlockMapA.tif BlockMapA.raw
stream -map i -depth 8 BlockMapB.tif BlockMapB.raw

# Concatenate the results OR if you aren't using cygwin or linux, open both
# files in hex editor, then copy contents of file "BlockMap_Modified-1.raw" and
# paste into the end of "BlockMap_Modified-0.raw," then save the resulting file as
# "BlockMap_Modified.raw"
cat BlockMap_ModifiedA.raw > BlockMap_Modified.raw; cat BlockMap_ModifiedB.raw >> BlockMap_Modified.raw

#######################################
# Height  map conversion
convert -depth 16 -size 256x512+0 -endian MSB gray:HeightMap.raw HeightMap.tif

# Edit the image.
# The image is 16-bit grayscale. That's 65,536 shades of gray instead of 255 as
# with 8-bit images. That allows for a wide range of possible heights and
# gradations between them. Editing may be challenging if you're not familiar
# with 16-bit editing. At this point you can also use the map as displacement
# in 3D software in order to sculpt new maps in a more intuitive way.

# Convert back to raw grayscale pixel stream, then rename:
convert -depth 16 -endian MSB HeightMap.tif HeightMap.gray
mv HeightMap.gray HeightMap.raw



#######################################
# Image conversion, all together for easy copy/paste
#######################################

convert -depth 8 -size 256x512 gray:BlockMapA.raw BlockMapA.tif
convert -depth 8 -size 256x512 gray:BlockMapB.raw BlockMapB.tif
convert -depth 8 -size 256x512 -define tiff:alpha=unspecified RGBA:DustMap.raw -type TrueColorMatte tif:DustMap.tif
convert -depth 16 -size 256x512+0 -endian MSB gray:HeightMap.raw HeightMap.tif
# And back again
stream -map i -depth 8 BlockMapA.tif BlockMapA.raw
stream -map i -depth 8 BlockMapB.tif BlockMapB.raw
stream -map rgba -storage-type char DustMap.tif DustMap.raw
convert -depth 16 -endian MSB HeightMap.tif HeightMap.gray
mv HeightMap.gray HeightMap.raw


#######################################
# Put it all back together manually
# This can also be done by copying and pasting in the correct order back into
# the TerrainData.bin file if you want to give yourself headaches.
#######################################

cat HeightMap_Modified.gray > TerrainData_Modified.bin; cat BlockMap_Modified.raw >> TerrainData_Modified.bin; cat DustMap_Modified.raw >> TerrainData_Modified.bin; 


#######################################
# Reverse engineering
# Random tricks that might be helpful in studying files
#######################################

# If you find a block of data that looks like 3 floating point 4-byte numbers
# and 4 bytes of zero-padding repeated many times, you may have found some
# 3D coordinates that are part of a model.
#
# convert binary file to 4 channel float (4th channel will be 0), e.g. X,Y,Z coords
od -w16 --endian=big -f -A n -v hullinstanceextract > pointsfile
# then use gnuplot to visualize
gnuplot
# from within gnuplot CLI
gnuplot> splot "pointsfile" using 1:2:3 with lines
# a 3D plot of the file will be displayed. X11 display server required.


#######################################
# Using QuickBms to extract and re-insert pieces. Download QuickBms first, then
# Save these 4 lines as a file called "JourneyTerrain.bms"

log HeightMap.raw 0 0x40000
log BlockMapA.raw 0x40000 0x20000
log BlockMapB.raw 0x60000 0x20000
log DustMap.raw 0x80000 0x80000

# Add the folder containing quickbms.exe to your PATH system variable (or modify)
# invocation so you use the full or relative path to the executable

# Go to the folder that contains your level's TerrainData.bin.gz
# Unzip
# Make a folder to store the extracted files
# Run quickbms to extract files

#######################################
# All of the following can be destructive to files.
# Backup your original extract, and your edited files to avoid losing work!
#######################################

cd /path/to/Terrain/Level_Barrens/
gunzip TerrainData.bin.gz
mkdir Extracted
quickbms.exe [/path/to/script/]JourneyTerrain.bms TerrainData.bin Extracted/

# you can also do that last step in windows by dragging JourneyTerrain.bms onto quickbms.exe
# and then choosing the right TerrainData.bin file and a folder to extract into.

# Copy "Extracted" folder to a "Modfied" folder so you have a clean copy and a
# working copy. Only work in the "Modified" folder

cp -R Extracted Modified

# Edit files, then
# Restore edits into TerrainData.bin using quickbms
# invocation will be the same as extract, but with added flags "-w -r"

cd /path/to/Terrain/Level_Barrens/
quickbms.exe -w -r [/path/to/script/]JourneyTerrain.bms TerrainData.bin Modified/
gzip TerrainData.bin

# Then patch TerrainData.bin.gz back into the game!
